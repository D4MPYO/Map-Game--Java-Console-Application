
import java.util.*;

public class UpdatedActivtyMap {
    public static int[] distance = new int[7];

    public static void main(String[] args) {

        distance[0] = 0; // Park To farm
        distance[1] = 0; // Park To Municipal-Hall
        distance[2] = 0; // farm To Municipal-Hall
        distance[3] = 0; // Municipal-Hall To Public-Market
        distance[4] = 0; // Public-Market To Fsih-port
        distance[5] = 0; // Fsih-port To Rice-Mill
        distance[6] = 0; // Rice-Mill Tofarm

        // randomize distance of from and to of each location

        distance[0] = new Random().nextInt(90) + 10; // ParkTofarm
        distance[1] = new Random().nextInt(90) + 10; // ParkToMunicipal-Hall
        distance[2] = new Random().nextInt(90) + 10; // farmToMunicipal-Hall
        distance[3] = new Random().nextInt(90) + 10; // Municipal-HallToPublic-Market
        distance[4] = new Random().nextInt(90) + 10; // Public-Market ToFsih-port
        distance[5] = new Random().nextInt(90) + 10; // Fsih-port ToRice-Mill
        distance[6] = new Random().nextInt(90) + 10; // Rice-Mill To farm

        // Location List
        String[] locations;
        locations = new String[6];
        locations[0] = "Park";
        locations[1] = "Fish-Port";
        locations[2] = "Coconut-Farm";
        locations[3] = "Municipal-Hall";
        locations[4] = "Public-Market";
        locations[5] = "Rice-Mill";
        System.out.println(
                "\n--------------------------------------------------------------Welcome to U.S.E (UNA! STA ELENA)--------------------------------------------------------");
        System.out.println(" ");

        // random Location Method
        String current_loc = locations[new Random().nextInt(locations.length)];
        // Display Current Location in Map
        switch (current_loc) {
            case "Park":
                System.out.println(
                        "::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::__________________:::::::::::::::::::::::::::::::___________________:::::::::::::::::::::::::::::::::::::::::________________:::::::::::");
                System.out.println(
                        "::::::::::::::::::|                |:::::::::::::::::::::::::::::::|                 |::::::::::::::::::::::::::::::::::::::::|                |::::::::::");
                System.out.println(
                        "::::::::::::::::::|                |_______________________________|                 |________________________________________|                |::::::::::");
                System.out.println(
                        "::::::::::::::::::|      Park      |                               |    Municipal    |                                        |     Public     |::::::::::");
                System.out.println(
                        "::::::::::::::::::|                |===============================|      Hall       |========================================|     Market     |::::::::::");
                System.out.println(
                        "::::::::::::::::::|  (U are Here)  |_______________________________|                 |________________________________________|                |::::::::::");
                System.out.println(
                        "::::::::::::::::::|________________|:::::::::::::::::::::::::::::::|_________________|::::::::::::::::::::::::::::::::::::::::|________________|::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |:::::::::::::::::::::::::::::::::::/     /::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |::::::::::::::::::::::::::::::::::/     /:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |:::::::::::::::::::::::::::::::::/     /::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |::::::::::::::::::::::::::::::::/     /:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |:::::::::::::::::::::::::::::::/     /::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |::::::::::::::::::::::::::::::/     /:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |:::::::::::::::::::::::::::::/     /::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |::::::::::::::::::::::::::::/     /:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |:::::::::::::::::::::::::::/     /::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |::::::::::::::::::::::::: /     /:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |:::::::::::::::::::::::::/     /::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |::::::::::::::::::::::::/     /:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |:::::::::::::::::::::::/     /::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |::::::::::::::::::::::/     /:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |:::::::::::::::::::::/     /::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |::::::::::::::::::::/     /:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |:::::::::::::::::::/     /::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |::::::::::::::::::/     /:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |:::::::::::::::::/     /::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |::::::::::::::::/     /:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |:::::::::::::::/     /::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |::::::::::::::/     /:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |:::::::::::::/     /::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |::::::::::::/     /:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |:::::::::::/     /::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |::::::::::/     /:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |:::::::: /     /::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |::::::::/     /:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |:::::::/     /::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        ":::::::::::::::::::_________________      /::::::::::::::::::::::::_________________:::::::::::::::::::::::::::::::::::::::::__________________:::::::::::");
                System.out.println(
                        "::::::::::::::::::|                |::::::::::::::::::::::::::::::|                 |::::::::::::::::::::::::::::::::::::::::|                |:::::::::::");
                System.out.println(
                        "::::::::::::::::::|                |______________________________|                 |________________________________________|                |:::::::::::");
                System.out.println(
                        "::::::::::::::::::|    Coconut     |                              |      Rice       |                                        |      Fish      |:::::::::::");
                System.out.println(
                        "::::::::::::::::::|     Farm       |==============================|      Mill       |========================================|      Port      |:::::::::::");
                System.out.println(
                        "::::::::::::::::::|                |______________________________|                 |________________________________________|                |:::::::::::");
                System.out.println(
                        "::::::::::::::::::|________________|::::::::::::::::::::::::::::::|_________________|::::::::::::::::::::::::::::::::::::::::|________________|:::::::::::");
                System.out.println(
                        "::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::");
                System.out.println("");
                System.out.println("\nDistances, from and to each location:");
                System.out.println("     a. Park to Coconut-Farm = " + distance[0] + "m");
                System.out.println("     b. Park to Municipal-Hall = " + distance[1] + "m");
                System.out.println("     c. Coconut-Farm to Municipal-Hall = " + distance[2] + "m");
                System.out.println("     d. Municipal-Hall to Public-Market = " + distance[3] + "m");
                System.out.println("     e. Public-Market to Fish-Port = " + distance[4] + "m");
                System.out.println("     f. Fish-Port to Rice-Mill = " + distance[5] + "m");
                System.out.println("     g. Rice-Mill to Coconut-Farm = " + distance[6] + "m");
                System.out.println("");
                break;

            case "Municipal-Hall":
                System.out.println(
                        "::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::__________________:::::::::::::::::::::::::::::::___________________:::::::::::::::::::::::::::::::::::::::::________________:::::::::::");
                System.out.println(
                        "::::::::::::::::::|                |:::::::::::::::::::::::::::::::|                 |::::::::::::::::::::::::::::::::::::::::|                |::::::::::");
                System.out.println(
                        "::::::::::::::::::|                |_______________________________|    Municipal    |________________________________________|                |::::::::::");
                System.out.println(
                        "::::::::::::::::::|                |                               |      Hall       |                                        |     Public     |::::::::::");
                System.out.println(
                        "::::::::::::::::::|      Park      |===============================|                 |========================================|     Market     |::::::::::");
                System.out.println(
                        "::::::::::::::::::|                |_______________________________|  (U are Here)   |________________________________________|                |::::::::::");
                System.out.println(
                        "::::::::::::::::::|________________|:::::::::::::::::::::::::::::::|_________________|::::::::::::::::::::::::::::::::::::::::|________________|::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |:::::::::::::::::::::::::::::::::::/     /::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |::::::::::::::::::::::::::::::::::/     /:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |:::::::::::::::::::::::::::::::::/     /::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |::::::::::::::::::::::::::::::::/     /:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |:::::::::::::::::::::::::::::::/     /::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |::::::::::::::::::::::::::::::/     /:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |:::::::::::::::::::::::::::::/     /::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |::::::::::::::::::::::::::::/     /:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |:::::::::::::::::::::::::::/     /::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |::::::::::::::::::::::::: /     /:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |:::::::::::::::::::::::::/     /::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |::::::::::::::::::::::::/     /:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |:::::::::::::::::::::::/     /::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |::::::::::::::::::::::/     /:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |:::::::::::::::::::::/     /::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |::::::::::::::::::::/     /:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |:::::::::::::::::::/     /::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |::::::::::::::::::/     /:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |:::::::::::::::::/     /::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |::::::::::::::::/     /:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |:::::::::::::::/     /::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |::::::::::::::/     /:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |:::::::::::::/     /::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |::::::::::::/     /:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |:::::::::::/     /::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |::::::::::/     /:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |:::::::: /     /::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |::::::::/     /:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |:::::::/     /::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        ":::::::::::::::::::_________________      /::::::::::::::::::::::::_________________:::::::::::::::::::::::::::::::::::::::::__________________:::::::::::");
                System.out.println(
                        "::::::::::::::::::|                |::::::::::::::::::::::::::::::|                 |::::::::::::::::::::::::::::::::::::::::|                |:::::::::::");
                System.out.println(
                        "::::::::::::::::::|                |______________________________|                 |________________________________________|                |:::::::::::");
                System.out.println(
                        "::::::::::::::::::|    Coconut     |                              |      Rice       |                                        |      Fish      |:::::::::::");
                System.out.println(
                        "::::::::::::::::::|     Farm       |==============================|      Mill       |========================================|      Port      |:::::::::::");
                System.out.println(
                        "::::::::::::::::::|                |______________________________|                 |________________________________________|                |:::::::::::");
                System.out.println(
                        "::::::::::::::::::|________________|::::::::::::::::::::::::::::::|_________________|::::::::::::::::::::::::::::::::::::::::|________________|:::::::::::");
                System.out.println(
                        "::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::");
                System.out.println("");
                System.out.println("\nDistances, from and to each location:");
                System.out.println("     a. Park to Coconut-Farm = " + distance[0] + "m");
                System.out.println("     b. Park to Municipal-Hall = " + distance[1] + "m");
                System.out.println("     c. Coconut-Farm to Municipal-Hall = " + distance[2] + "m");
                System.out.println("     d. Municipal-Hall to Public-Market = " + distance[3] + "m");
                System.out.println("     e. Public-Market to Fish-Port = " + distance[4] + "m");
                System.out.println("     f. Fish-Port to Rice-Mill = " + distance[5] + "m");
                System.out.println("     g. Rice-Mill to Coconut-Farm = " + distance[6] + "m");
                System.out.println("");
                break;

            case "Fish-Port":
                System.out.println(
                        "::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::__________________:::::::::::::::::::::::::::::::___________________:::::::::::::::::::::::::::::::::::::::::________________:::::::::::");
                System.out.println(
                        "::::::::::::::::::|                |:::::::::::::::::::::::::::::::|                 |::::::::::::::::::::::::::::::::::::::::|                |::::::::::");
                System.out.println(
                        "::::::::::::::::::|                |_______________________________|                 |________________________________________|                |::::::::::");
                System.out.println(
                        "::::::::::::::::::|                |                               |    Municipal    |                                        |     Public     |::::::::::");
                System.out.println(
                        "::::::::::::::::::|      Park      |===============================|      Hall       |========================================|     Market     |::::::::::");
                System.out.println(
                        "::::::::::::::::::|                |_______________________________|                 |________________________________________|                |::::::::::");
                System.out.println(
                        "::::::::::::::::::|________________|:::::::::::::::::::::::::::::::|_________________|::::::::::::::::::::::::::::::::::::::::|________________|::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |:::::::::::::::::::::::::::::::::::/     /::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |::::::::::::::::::::::::::::::::::/     /:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |:::::::::::::::::::::::::::::::::/     /::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |::::::::::::::::::::::::::::::::/     /:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |:::::::::::::::::::::::::::::::/     /::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |::::::::::::::::::::::::::::::/     /:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |:::::::::::::::::::::::::::::/     /::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |::::::::::::::::::::::::::::/     /:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |:::::::::::::::::::::::::::/     /::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |::::::::::::::::::::::::: /     /:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |:::::::::::::::::::::::::/     /::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |::::::::::::::::::::::::/     /:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |:::::::::::::::::::::::/     /::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |::::::::::::::::::::::/     /:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |:::::::::::::::::::::/     /::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |::::::::::::::::::::/     /:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |:::::::::::::::::::/     /::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |::::::::::::::::::/     /:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |:::::::::::::::::/     /::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |::::::::::::::::/     /:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |:::::::::::::::/     /::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |::::::::::::::/     /:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |:::::::::::::/     /::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |::::::::::::/     /:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |:::::::::::/     /::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |::::::::::/     /:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |:::::::: /     /::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |::::::::/     /:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |:::::::/     /::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        ":::::::::::::::::::_________________      /::::::::::::::::::::::::_________________:::::::::::::::::::::::::::::::::::::::::__________________:::::::::::");
                System.out.println(
                        "::::::::::::::::::|                |::::::::::::::::::::::::::::::|                 |::::::::::::::::::::::::::::::::::::::::|                |:::::::::::");
                System.out.println(
                        "::::::::::::::::::|                |______________________________|                 |________________________________________|      Fish      |:::::::::::");
                System.out.println(
                        "::::::::::::::::::|    Coconut     |                              |      Rice       |                                        |      Port      |:::::::::::");
                System.out.println(
                        "::::::::::::::::::|     Farm       |==============================|      Mill       |========================================|                |:::::::::::");
                System.out.println(
                        "::::::::::::::::::|                |______________________________|                 |________________________________________|  (U are Here)  |:::::::::::");
                System.out.println(
                        "::::::::::::::::::|________________|::::::::::::::::::::::::::::::|_________________|::::::::::::::::::::::::::::::::::::::::|________________|:::::::::::");
                System.out.println(
                        "::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::");
                System.out.println("");
                System.out.println("\nDistances, from and to each location:");
                System.out.println("     a. Park to Coconut-Farm = " + distance[0] + "m");
                System.out.println("     b. Park to Municipal-Hall = " + distance[1] + "m");
                System.out.println("     c. Coconut-Farm to Municipal-Hall = " + distance[2] + "m");
                System.out.println("     d. Municipal-Hall to Public-Market = " + distance[3] + "m");
                System.out.println("     e. Public-Market to Fish-Port = " + distance[4] + "m");
                System.out.println("     f. Fish-Port to Rice-Mill = " + distance[5] + "m");
                System.out.println("     g. Rice-Mill to Coconut-Farm = " + distance[6] + "m");
                System.out.println("");
                break;

            case "Coconut-Farm":
                System.out.println(
                        "::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::__________________:::::::::::::::::::::::::::::::___________________:::::::::::::::::::::::::::::::::::::::::________________:::::::::::");
                System.out.println(
                        "::::::::::::::::::|                |:::::::::::::::::::::::::::::::|                 |::::::::::::::::::::::::::::::::::::::::|                |::::::::::");
                System.out.println(
                        "::::::::::::::::::|                |_______________________________|                 |________________________________________|                |::::::::::");
                System.out.println(
                        "::::::::::::::::::|                |                               |    Municipal    |                                        |     Public     |::::::::::");
                System.out.println(
                        "::::::::::::::::::|      Park      |===============================|      Hall       |========================================|     Market     |::::::::::");
                System.out.println(
                        "::::::::::::::::::|                |_______________________________|                 |________________________________________|                |::::::::::");
                System.out.println(
                        "::::::::::::::::::|________________|:::::::::::::::::::::::::::::::|_________________|::::::::::::::::::::::::::::::::::::::::|________________|::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |:::::::::::::::::::::::::::::::::::/     /::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |::::::::::::::::::::::::::::::::::/     /:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |:::::::::::::::::::::::::::::::::/     /::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |::::::::::::::::::::::::::::::::/     /:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |:::::::::::::::::::::::::::::::/     /::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |::::::::::::::::::::::::::::::/     /:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |:::::::::::::::::::::::::::::/     /::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |::::::::::::::::::::::::::::/     /:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |:::::::::::::::::::::::::::/     /::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |::::::::::::::::::::::::: /     /:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |:::::::::::::::::::::::::/     /::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |::::::::::::::::::::::::/     /:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |:::::::::::::::::::::::/     /::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |::::::::::::::::::::::/     /:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |:::::::::::::::::::::/     /::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |::::::::::::::::::::/     /:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |:::::::::::::::::::/     /::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |::::::::::::::::::/     /:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |:::::::::::::::::/     /::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |::::::::::::::::/     /:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |:::::::::::::::/     /::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |::::::::::::::/     /:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |:::::::::::::/     /::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |::::::::::::/     /:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |:::::::::::/     /::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |::::::::::/     /:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |:::::::: /     /::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |::::::::/     /:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |:::::::/     /::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        ":::::::::::::::::::_________________      /::::::::::::::::::::::::_________________:::::::::::::::::::::::::::::::::::::::::__________________:::::::::::");
                System.out.println(
                        "::::::::::::::::::|                |::::::::::::::::::::::::::::::|                 |::::::::::::::::::::::::::::::::::::::::|                |:::::::::::");
                System.out.println(
                        "::::::::::::::::::|    Coconut     |______________________________|                 |________________________________________|                |:::::::::::");
                System.out.println(
                        "::::::::::::::::::|     Farm       |                              |      Rice       |                                        |      Fish      |:::::::::::");
                System.out.println(
                        "::::::::::::::::::|                |==============================|      Mill       |========================================|      Port      |:::::::::::");
                System.out.println(
                        "::::::::::::::::::|  (U are Here)  |______________________________|                 |________________________________________|                |:::::::::::");
                System.out.println(
                        "::::::::::::::::::|________________|::::::::::::::::::::::::::::::|_________________|::::::::::::::::::::::::::::::::::::::::|________________|:::::::::::");
                System.out.println(
                        "::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::");
                System.out.println("");
                System.out.println("\nDistances, from and to each location:");
                System.out.println("     a. Park to Coconut-Farm = " + distance[0] + "m");
                System.out.println("     b. Park to Municipal-Hall = " + distance[1] + "m");
                System.out.println("     c. Coconut-Farm to Municipal-Hall = " + distance[2] + "m");
                System.out.println("     d. Municipal-Hall to Public-Market = " + distance[3] + "m");
                System.out.println("     e. Public-Market to Fish-Port = " + distance[4] + "m");
                System.out.println("     f. Fish-Port to Rice-Mill = " + distance[5] + "m");
                System.out.println("     g. Rice-Mill to Coconut-Farm = " + distance[6] + "m");
                System.out.println("");
                break;

            case "Public-Market":
                System.out.println(
                        "::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::__________________:::::::::::::::::::::::::::::::___________________:::::::::::::::::::::::::::::::::::::::::________________:::::::::::");
                System.out.println(
                        "::::::::::::::::::|                |:::::::::::::::::::::::::::::::|                 |::::::::::::::::::::::::::::::::::::::::|                |::::::::::");
                System.out.println(
                        "::::::::::::::::::|                |_______________________________|                 |________________________________________|     Public     |::::::::::");
                System.out.println(
                        "::::::::::::::::::|                |                               |    Municipal    |                                        |     Market     |::::::::::");
                System.out.println(
                        "::::::::::::::::::|      Park      |===============================|      Hall       |========================================|                |::::::::::");
                System.out.println(
                        "::::::::::::::::::|                |_______________________________|                 |________________________________________|  (U are Here)  |::::::::::");
                System.out.println(
                        "::::::::::::::::::|________________|:::::::::::::::::::::::::::::::|_________________|::::::::::::::::::::::::::::::::::::::::|________________|::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |:::::::::::::::::::::::::::::::::::/     /::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |::::::::::::::::::::::::::::::::::/     /:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |:::::::::::::::::::::::::::::::::/     /::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |::::::::::::::::::::::::::::::::/     /:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |:::::::::::::::::::::::::::::::/     /::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |::::::::::::::::::::::::::::::/     /:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |:::::::::::::::::::::::::::::/     /::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |::::::::::::::::::::::::::::/     /:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |:::::::::::::::::::::::::::/     /::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |::::::::::::::::::::::::: /     /:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |:::::::::::::::::::::::::/     /::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |::::::::::::::::::::::::/     /:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |:::::::::::::::::::::::/     /::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |::::::::::::::::::::::/     /:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |:::::::::::::::::::::/     /::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |::::::::::::::::::::/     /:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |:::::::::::::::::::/     /::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |::::::::::::::::::/     /:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |:::::::::::::::::/     /::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |::::::::::::::::/     /:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |:::::::::::::::/     /::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |::::::::::::::/     /:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |:::::::::::::/     /::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |::::::::::::/     /:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |:::::::::::/     /::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |::::::::::/     /:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |:::::::: /     /::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |::::::::/     /:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |:::::::/     /::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        ":::::::::::::::::::_________________      /::::::::::::::::::::::::_________________:::::::::::::::::::::::::::::::::::::::::__________________:::::::::::");
                System.out.println(
                        "::::::::::::::::::|                |::::::::::::::::::::::::::::::|                 |::::::::::::::::::::::::::::::::::::::::|                |:::::::::::");
                System.out.println(
                        "::::::::::::::::::|                |______________________________|                 |________________________________________|                |:::::::::::");
                System.out.println(
                        "::::::::::::::::::|    Coconut     |                              |      Rice       |                                        |      Fish      |:::::::::::");
                System.out.println(
                        "::::::::::::::::::|     Farm       |==============================|      Mill       |========================================|      Port      |:::::::::::");
                System.out.println(
                        "::::::::::::::::::|                |______________________________|                 |________________________________________|                |:::::::::::");
                System.out.println(
                        "::::::::::::::::::|________________|::::::::::::::::::::::::::::::|_________________|::::::::::::::::::::::::::::::::::::::::|________________|:::::::::::");
                System.out.println(
                        "::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::");
                System.out.println("");
                System.out.println("\nDistances, from and to each location:");
                System.out.println("     a. Park to Coconut-Farm = " + distance[0] + "m");
                System.out.println("     b. Park to Municipal-Hall = " + distance[1] + "m");
                System.out.println("     c. Coconut-Farm to Municipal-Hall = " + distance[2] + "m");
                System.out.println("     d. Municipal-Hall to Public-Market = " + distance[3] + "m");
                System.out.println("     e. Public-Market to Fish-Port = " + distance[4] + "m");
                System.out.println("     f. Fish-Port to Rice-Mill = " + distance[5] + "m");
                System.out.println("     g. Rice-Mill to Coconut-Farm = " + distance[6] + "m");
                System.out.println("");
                break;

            case "Rice-Mill":
                System.out.println(
                        "::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::__________________:::::::::::::::::::::::::::::::___________________:::::::::::::::::::::::::::::::::::::::::________________:::::::::::");
                System.out.println(
                        "::::::::::::::::::|                |:::::::::::::::::::::::::::::::|                 |::::::::::::::::::::::::::::::::::::::::|                |::::::::::");
                System.out.println(
                        "::::::::::::::::::|                |_______________________________|                 |________________________________________|                |::::::::::");
                System.out.println(
                        "::::::::::::::::::|                |                               |    Municipal    |                                        |     Public     |::::::::::");
                System.out.println(
                        "::::::::::::::::::|      Park      |===============================|      Hall       |========================================|     Market     |::::::::::");
                System.out.println(
                        "::::::::::::::::::|                |_______________________________|                 |________________________________________|                |::::::::::");
                System.out.println(
                        "::::::::::::::::::|________________|:::::::::::::::::::::::::::::::|_________________|::::::::::::::::::::::::::::::::::::::::|________________|::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |:::::::::::::::::::::::::::::::::::/     /::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |::::::::::::::::::::::::::::::::::/     /:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |:::::::::::::::::::::::::::::::::/     /::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |::::::::::::::::::::::::::::::::/     /:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |:::::::::::::::::::::::::::::::/     /::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |::::::::::::::::::::::::::::::/     /:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |:::::::::::::::::::::::::::::/     /::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |::::::::::::::::::::::::::::/     /:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |:::::::::::::::::::::::::::/     /::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |::::::::::::::::::::::::: /     /:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |:::::::::::::::::::::::::/     /::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |::::::::::::::::::::::::/     /:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |:::::::::::::::::::::::/     /::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |::::::::::::::::::::::/     /:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |:::::::::::::::::::::/     /::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |::::::::::::::::::::/     /:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |:::::::::::::::::::/     /::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |::::::::::::::::::/     /:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |:::::::::::::::::/     /::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |::::::::::::::::/     /:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |:::::::::::::::/     /::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |::::::::::::::/     /:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |:::::::::::::/     /::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |::::::::::::/     /:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |:::::::::::/     /::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |::::::::::/     /:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |:::::::: /     /::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |::::::::/     /:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::|  ::  |:::::::/     /::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|  ::  |::::::::::::::::");
                System.out.println(
                        ":::::::::::::::::::_________________      /::::::::::::::::::::::::_________________:::::::::::::::::::::::::::::::::::::::::__________________:::::::::::");
                System.out.println(
                        "::::::::::::::::::|                |::::::::::::::::::::::::::::::|                 |::::::::::::::::::::::::::::::::::::::::|                |:::::::::::");
                System.out.println(
                        "::::::::::::::::::|                |______________________________|      Rice       |________________________________________|                |:::::::::::");
                System.out.println(
                        "::::::::::::::::::|    Coconut     |                              |      Mill       |                                        |      Fish      |:::::::::::");
                System.out.println(
                        "::::::::::::::::::|     Farm       |==============================|                 |========================================|      Port      |:::::::::::");
                System.out.println(
                        "::::::::::::::::::|                |______________________________|  (U are Here)   |________________________________________|                |:::::::::::");
                System.out.println(
                        "::::::::::::::::::|________________|::::::::::::::::::::::::::::::|_________________|::::::::::::::::::::::::::::::::::::::::|________________|:::::::::::");
                System.out.println(
                        "::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::");
                System.out.println(
                        "::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::");
                System.out.println("\nDistances, from and to each location:");
                System.out.println("     a. Park to Coconut-Farm = " + distance[0] + "m");
                System.out.println("     b. Park to Municipal-Hall = " + distance[1] + "m");
                System.out.println("     c. Coconut-Farm to Municipal-Hall = " + distance[2] + "m");
                System.out.println("     d. Municipal-Hall to Public-Market = " + distance[3] + "m");
                System.out.println("     e. Public-Market to Fish-Port = " + distance[4] + "m");
                System.out.println("     f. Fish-Port to Rice-Mill = " + distance[5] + "m");
                System.out.println("     g. Rice-Mill to Coconut-Farm = " + distance[6] + "m");
                System.out.println("");
                break;
        }

        System.out.println("Your Current Location: " + current_loc);
        System.out.println(" ");

        // Destination Option Menu
        System.out.println("Please Select  Your Destination:");

        String destinationselected;

        // Destination Menu
        String[] DestinationMenu;
        DestinationMenu = new String[6];
        DestinationMenu[0] = "1. Park";
        DestinationMenu[1] = "2. Fish-Port";
        DestinationMenu[2] = "3. Coconut-Farm";
        DestinationMenu[3] = "4. Municipal-Hall";
        DestinationMenu[4] = "5. Public-Market";
        DestinationMenu[5] = "6. Rice-Mill";
        for (String x : DestinationMenu) {
            System.out.println(x);
        }
        System.out.println("");
        System.out.print("Your Destination(Number Only): ");

        // Setup the Scanner
        Scanner userInput = new Scanner(System.in);
        int userSelect = userInput.nextInt();

        // Switch Statement of Scanner (userselect) for the destination menu
        switch (userSelect) {
            case 1:
                destinationselected = "Park";
                if (current_loc.equals("Park")) {
                    System.out.println("You select your current locations");
                } else {
                    System.out.println("\nYour Destination is: " + destinationselected);
                    myDistination(destinationselected, current_loc);
                }
                break;
            case 2:
                destinationselected = "Fish-Port";
                if (current_loc.equals("Fish-Port")) {
                    System.out.println("You select your current locations");
                } else {
                    System.out.println("\nYour Destination is: " + destinationselected);
                    myDistination(destinationselected, current_loc);
                }
                break;
            case 3:
                destinationselected = "Coconut-Farm";
                if (current_loc.equals("Coconut-Farm")) {
                    System.out.println("You select your current locations");
                } else {
                    System.out.println("\nYour Destination is: " + destinationselected);
                    myDistination(destinationselected, current_loc);
                }
                break;
            case 4:
                destinationselected = "Municipal-Hall";
                if (current_loc.equals("Municipal-Hall")) {
                    System.out.println("You select your current locations");
                } else {
                    System.out.println("\nYour Destination is: " + destinationselected);
                    myDistination(destinationselected, current_loc);
                }
                break;
            case 5:
                destinationselected = "Public-Market";
                if (current_loc.equals("Public-Market")) {
                    System.out.println("You select your current locations");
                } else {
                    System.out.println("\nYour Destination is: " + destinationselected);
                    myDistination(destinationselected, current_loc);
                }
                break;
            case 6:
                destinationselected = "Rice-Mill";
                if (current_loc.equals("Rice-Mill")) {
                    System.out.println("You select your current locations");
                } else {
                    System.out.println("\nYour Destination is: " + destinationselected);
                    myDistination(destinationselected, current_loc);
                }
                break;
            default:
                destinationselected = "Not Availble";

        }
    }

    static String formatTime(int cal_time) {

        int hours = cal_time / 60;
        int minutes = cal_time % 60;
        return hours + "hrs:" + minutes + "minutes:";

    }

    // Displaying Routes and Recommend the Shortest Path
    static void myDistination(String distination, String location) {
        if (location.equals("Park")) {
            switch (distination) {
                case "Municipal-Hall":
                    int municipal_route1 = distance[1];
                    int municipal_route2 = distance[0] + distance[1];
                    int municipal_route3 = distance[0] + distance[6] + distance[5] + distance[4] + distance[3];
                    System.out.println("\nRoute 1: Park | Municipal-Hall | Distance: " + municipal_route1 + "m");
                    System.out.println(
                            "\nRoute 2: Park | Coconut-Farm - Municipal-Hall | Distance: " + municipal_route2 + "m");
                    System.out.println(
                            "\nRoute 3: Park  Coconut-Farm - Rice-Mill - Fish-Port - Public-Market - Municipal-Hall | Distance: "
                                    + municipal_route3 + "m");
                    if (municipal_route1 < municipal_route2 && municipal_route1 < municipal_route3) {
                        System.out
                                .println("\nRecommended route: Route 1 with the distance of " + municipal_route1 + "m");

                        String time_format = formatTime(municipal_route1);
                        System.out.println("\nThe time needed to arrive at the " + distination + " is " + time_format);
                    } else if (municipal_route2 < municipal_route1 && municipal_route2 < municipal_route3) {
                        System.out
                                .println("\nRecommended route: Route 2 with the distance of " + municipal_route2 + "m");

                        String time_format = formatTime(municipal_route2);
                        System.out.println("\nThe time needed to arrive at the " + distination + " is " + time_format);
                    } else if (municipal_route3 < municipal_route1 && municipal_route3 < municipal_route2) {
                        System.out
                                .println("\nRecommended route: Route 3 with the distance of " + municipal_route3 + "m");

                        String time_format = formatTime(municipal_route3);
                        System.out.println("\nThe time needed to arrive at the " + distination + " is " + time_format);
                    }
                    break;
                case "Coconut-Farm":
                    int coconut_route1 = distance[0];
                    int coconut_route2 = distance[0] + distance[1];
                    int coconut_route3 = distance[1] + distance[3] + distance[4] + distance[5] + distance[6];
                    System.out.println("\nRoute 1: Park – Coconut-Farm | Distance: " + coconut_route1 + "m");
                    System.out.println("\nRoute 2: Coconut-Farm – Municipal-Hall - Coconut-Farm | Distance: "
                            + coconut_route2 + "m");
                    System.out.println(
                            "\nRoute 3: Park – Municipal-Hall - Public-Market - Fish-Port - Rice-Mill - Coconut-Farm | Distance: "
                                    + coconut_route3 + "m");
                    if (coconut_route1 < coconut_route2 && coconut_route1 < coconut_route3) {
                        System.out.println("\nRecommended route: Route 1 with the distance of " + coconut_route1 + "m");

                        String time_format = formatTime(coconut_route1);
                        System.out.println("\nThe time needed to arrive at the " + distination + " is " + time_format);
                    } else if (coconut_route2 < coconut_route1 && coconut_route2 < coconut_route3) {
                        System.out.println("\nRecommended route: Route 2 with the distance of " + coconut_route2 + "m");

                        String time_format = formatTime(coconut_route2);
                        System.out.println("\nThe time needed to arrive at the " + distination + " is " + time_format);
                    } else if (coconut_route3 < coconut_route1 && coconut_route3 < coconut_route2) {
                        System.out.println("\nRecommended route: Route 3 with the distance of " + coconut_route3 + "m");

                        String time_format = formatTime(coconut_route3);
                        System.out.println("\nThe time needed to arrive at the " + distination + " is " + time_format);
                    }
                    break;
                case "Rice-Mill":
                    int rice_route1 = distance[0] + distance[6];
                    int rice_route2 = distance[1] + distance[2] + distance[6];
                    int rice_route3 = distance[1] + distance[3] + distance[4] + distance[5];
                    System.out.println("\nRoute 1: Park – Coconut-Farm - Rice-Mill | Distance: " + rice_route1 + "m");
                    System.out.println(
                            "\nRoute 2: Park – Municipal-Hall - Coconut-farm - Rice-Mill | Distance: " + rice_route2
                                    + "m");
                    System.out.println(
                            "\nRoute 3: Park – Municipal Hall - Public-Market - Fish-Port - Rice-Mill | Distance: "
                                    + rice_route3 + "m");
                    if (rice_route1 < rice_route2 && rice_route1 < rice_route3) {
                        System.out.println("\nRecommended route: Route 1 with the distance of " + rice_route1 + "m");

                        String time_format = formatTime(rice_route1);
                        System.out.println("\nThe time needed to arrive at the " + distination + " is " + time_format);
                    } else if (rice_route2 < rice_route1 && rice_route2 < rice_route3) {
                        System.out.println("\nRecommended route: Route 2 with the distance of " + rice_route2 + "m");

                        String time_format = formatTime(rice_route2);
                        System.out.println("\nThe time needed to arrive at the " + distination + " is " + time_format);
                    } else if (rice_route3 < rice_route1 && rice_route3 < rice_route2) {
                        System.out.println("\nRecommended route: Route 3 with the distance of " + rice_route3 + "m");

                        String time_format = formatTime(rice_route3);
                        System.out.println("\nThe time needed to arrive at the " + distination + " is " + time_format);
                    }
                    break;
                case "Fish-Port":
                    int fish_route1 = distance[0] + distance[6] + distance[5];
                    int fish_route2 = distance[1] + distance[3] + distance[4];
                    int fish_route3 = distance[1] + distance[2] + distance[6] + distance[5];
                    System.out.println(
                            "\nRoute 1: Park – Coconut-Farm - Rice-Mill - Fish-Port | Distance: " + fish_route1 + "m");
                    System.out.println("\nRoute 2: Park – Municipal-Hall - Public-Market - Fish-Port | Distance: "
                            + fish_route2 + "m");
                    System.out.println(
                            "\nRoute 3: Park – Municipal-Hall - Coconut-Farm - Rice-Mill - Fish-Port | Distance: "
                                    + fish_route3 + "m");
                    if (fish_route1 < fish_route2 && fish_route1 < fish_route3) {
                        System.out.println("\nRecommended route: Route 1 with the distance of " + fish_route1 + "m");

                        String time_format = formatTime(fish_route1);
                        System.out.println("\nThe time needed to arrive at the " + distination + " is " + time_format);
                    } else if (fish_route2 < fish_route1 && fish_route2 < fish_route3) {
                        System.out.println("\nRecommended route: Route 2 with the distance of " + fish_route2 + "m");

                        String time_format = formatTime(fish_route2);
                        System.out.println("\nThe time needed to arrive at the " + distination + " is " + time_format);
                    } else if (fish_route3 < fish_route1 && fish_route3 < fish_route2) {
                        System.out.println("\nRecommended route: Route 3 with the distance of " + fish_route3 + "m");

                        String time_format = formatTime(fish_route3);
                        System.out.println("\nThe time needed to arrive at the " + distination + " is " + time_format);
                    }
                    break;
                case "Public-Market":
                    int market_route1 = distance[1] + distance[3];
                    int market_route2 = distance[0] + distance[6] + distance[5] + distance[4];
                    int market_route3 = distance[1] + distance[2] + distance[6] + distance[5] + distance[4];
                    System.out.println(
                            "\nRoute 1: Park – Municipal-Hall - Public-Market | Distance: " + market_route1 + "m");
                    System.out.println(
                            "\nRoute 2: Park – Coconut-Farm - Rice-Mill - Fish-Port - Public-Market | Distance: "
                                    + market_route2 + "m");
                    System.out.println(
                            "\nRoute 3: Park – Municipal-Hall - Coconut-Farm - Rice-Mill – Fish-Port - Public-Market | Distance: "
                                    + market_route3 + "m");
                    if (market_route1 < market_route2 && market_route1 < market_route3) {
                        System.out.println("\nRecommended route: Route 1 with the distance of " + market_route1 + "m");

                        String time_format = formatTime(market_route1);
                        System.out.println("\nThe time needed to arrive at the " + distination + " is " + time_format);
                    } else if (market_route2 < market_route1 && market_route2 < market_route3) {
                        System.out.println("\nRecommended route: Route 2 with the distance of " + market_route2 + "m");

                        String time_format = formatTime(market_route2);
                        System.out.println("\nThe time needed to arrive at the " + distination + " is " + time_format);
                    } else if (market_route3 < market_route1 && market_route3 < market_route2) {
                        System.out.println("\nRecommended route: Route 3 with the distance of " + market_route3 + "m");

                        String time_format = formatTime(market_route3);
                        System.out.println("\nThe time needed to arrive at the " + distination + " is " + time_format);
                    }
                    break;
            }
        } else if (location.equals("Coconut-Farm")) {
            switch (distination) {
                case "Park":
                    int park_route1 = distance[0];
                    int park_route2 = distance[2] + distance[1];
                    int park_route3 = distance[6] + distance[5] + distance[4] + distance[3] + distance[1];
                    System.out.println("\nRoute 1: Coconut-Farm - Park | Distance: " + park_route1 + "m");
                    System.out.println(
                            "\nRoute 2: Coconut-Farm – Municipal-Hall - Park | Distance: " + park_route2 + "m");
                    System.out.println(
                            "\nRoute 3: Coconut-Farm - Rice-Mill – Fish-Port - Public-Market - Municipal-Hall- Park | Distance: "
                                    + park_route3 + "m");
                    if (park_route1 < park_route2 && park_route1 < park_route3) {
                        System.out.println("\nRecommended route: Route 1 with the distance of " + park_route1 + "m");

                        String time_format = formatTime(park_route1);
                        System.out.println("\nThe time needed to arrive at the " + distination + " is " + time_format);
                    } else if (park_route2 < park_route1 && park_route2 < park_route3) {
                        System.out.println("\nRecommended route: Route 2 with the distance of " + park_route2 + "m");

                        String time_format = formatTime(park_route2);
                        System.out.println("\nThe time needed to arrive at the " + distination + " is " + time_format);
                    } else if (park_route3 < park_route1 && park_route3 < park_route2) {
                        System.out.println("\nRecommended route: Route 3 with the distance of " + park_route3 + "m");

                        String time_format = formatTime(park_route3);
                        System.out.println("\nThe time needed to arrive at the " + distination + " is " + time_format);
                    }
                    break;
                case "Municipal-Hall":
                    int municipal_route1 = distance[2];
                    int municipal_route2 = distance[0] + distance[1];
                    int municipal_route3 = distance[6] + distance[5] + distance[4] + distance[3];
                    System.out
                            .println("\nRoute 1: Coconut-Farm - Municipal-Hall | Distance: " + municipal_route1 + "m");
                    System.out.println(
                            "\nRoute 2: Coconut-Farm - Park - Municipal-Hall | Distance: " + municipal_route2 + "m");
                    System.out.println(
                            "\nRoute 3: Coconut-Farm - Rice-Mill – Fish-Port - Public-Market - Municipal-Hall | Distance: "
                                    + municipal_route3 + "m");
                    if (municipal_route1 < municipal_route2 && municipal_route1 < municipal_route3) {
                        System.out
                                .println("\nRecommended route: Route 1 with the distance of " + municipal_route1 + "m");

                        String time_format = formatTime(municipal_route1);
                        System.out.println("\nThe time needed to arrive at the " + distination + " is " + time_format);
                    } else if (municipal_route2 < municipal_route1 && municipal_route2 < municipal_route3) {
                        System.out
                                .println("\nRecommended route: Route 2 with the distance of " + municipal_route2 + "m");

                        String time_format = formatTime(municipal_route2);
                        System.out.println("\nThe time needed to arrive at the " + distination + " is " + time_format);
                    } else if (municipal_route3 < municipal_route1 && municipal_route3 < municipal_route2) {
                        System.out
                                .println("\nRecommended route: Route 3 with the distance of " + municipal_route3 + "m");

                        String time_format = formatTime(municipal_route3);
                        System.out.println("\nThe time needed to arrive at the " + distination + " is " + time_format);
                    }
                    break;
                case "Rice-Mill":
                    int rice_route1 = distance[6];
                    int rice_route2 = distance[2] + distance[3] + distance[4] + distance[5];
                    int rice_route3 = distance[0] + distance[1] + distance[3] + distance[4] + distance[5];
                    System.out.println("\nRoute 1: Coconut-Farm - Rice-Mill | Distance: " + rice_route1 + "m");
                    System.out.println(
                            "\nRoute 2: Coconut-Farm - Municipal-Hall - Public-Market - Fish-Port - Rice-Mill | Distance: "
                                    + rice_route2 + "m");
                    System.out.println(
                            "\nRoute 3: Coconut-Farm - Park - Municipal-Hall - Public-Market – Fish-Port - Rice-Mill | Distance: "
                                    + rice_route3 + "m");
                    if (rice_route1 < rice_route2 && rice_route1 < rice_route3) {
                        System.out.println("\nRecommended route: Route 1 with the distance of " + rice_route1 + "m");

                        String time_format = formatTime(rice_route1);
                        System.out.println("\nThe time needed to arrive at the " + distination + " is " + time_format);
                    } else if (rice_route2 < rice_route1 && rice_route2 < rice_route3) {
                        System.out.println("\nRecommended route: Route 2 with the distance of " + rice_route2 + "m");

                        String time_format = formatTime(rice_route2);
                        System.out.println("\nThe time needed to arrive at the " + distination + " is " + time_format);
                    } else if (rice_route3 < rice_route1 && rice_route3 < rice_route2) {
                        System.out.println("\nRecommended route: Route 3 with the distance of " + rice_route3 + "m");

                        String time_format = formatTime(rice_route3);
                        System.out.println("\nThe time needed to arrive at the " + distination + " is " + time_format);
                    }
                    break;
                case "Fish-Port":
                    int fish_route1 = distance[6] + distance[5];
                    int fish_route2 = distance[2] + distance[3] + distance[4];
                    int fish_route3 = distance[0] + distance[1] + distance[3] + distance[4];
                    System.out.println(
                            "\nRoute 1: Coconut-Farm - Rice-Mill - Fish-Port | Distance: " + fish_route1 + "m");
                    System.out
                            .println("\nRoute 2: Coconut-Farm – Municipal-Hall - Public-Market - Fish-Port | Distance: "
                                    + fish_route2 + "m");
                    System.out.println(
                            "\nRoute 3: Coconut-Farm- Park – Municipal-Hall - Public-Market - Fish-Port | Distance: "
                                    + fish_route3 + "m");
                    if (fish_route1 < fish_route2 && fish_route1 < fish_route3) {
                        System.out.println("\nRecommended route: Route 1 with the distance of " + fish_route1 + "m");

                        String time_format = formatTime(fish_route1);
                        System.out.println("\nThe time needed to arrive at the " + distination + " is " + time_format);
                    } else if (fish_route2 < fish_route1 && fish_route2 < fish_route3) {
                        System.out.println("\nRecommended route: Route 2 with the distance of " + fish_route2 + "m");

                        String time_format = formatTime(fish_route2);
                        System.out.println("\nThe time needed to arrive at the " + distination + " is " + time_format);
                    } else if (fish_route3 < fish_route1 && fish_route3 < fish_route2) {
                        System.out.println("\nRecommended route: Route 3 with the distance of " + fish_route3 + "m");

                        String time_format = formatTime(fish_route3);
                        System.out.println("\nThe time needed to arrive at the " + distination + " is " + time_format);
                    }
                    break;
                case "Public-Market":
                    int market_route1 = distance[2] + distance[3];
                    int market_route2 = distance[0] + distance[1] + distance[3];
                    int market_route3 = distance[6] + distance[5] + distance[4];
                    System.out.println("\nRoute 1: Coconut-Farm – Municipal-Hall - Public-Market | Distance: "
                            + market_route1 + "m");
                    System.out.println("\nRoute 2: Coconut-Farm - Park – Municipal-Hall - Public-Market | Distance: "
                            + market_route2 + "m");
                    System.out.println("\nRoute 3: Coconut-Farm - Rice-Mill – Fish-Port - Public-Market | Distance: "
                            + market_route3 + "m");
                    if (market_route1 < market_route2 && market_route1 < market_route3) {
                        System.out.println("\nRecommended route: Route 1 with the distance of " + market_route1 + "m");

                        String time_format = formatTime(market_route1);
                        System.out.println("\nThe time needed to arrive at the " + distination + " is " + time_format);
                    } else if (market_route2 < market_route1 && market_route2 < market_route3) {
                        System.out.println("\nRecommended route: Route 2 with the distance of " + market_route2 + "m");

                        String time_format = formatTime(market_route2);
                        System.out.println("\nThe time needed to arrive at the " + distination + " is " + time_format);
                    } else if (market_route3 < market_route1 && market_route3 < market_route2) {
                        System.out.println("\nRecommended route: Route 3 with the distance of " + market_route3 + "m");

                        String time_format = formatTime(market_route3);
                        System.out.println("\nThe time needed to arrive at the " + distination + " is " + time_format);
                    }
                    break;
            }
        } else if (location.equals("Municipal-Hall")) {
            switch (distination) {
                case "Park":
                    int park_route1 = distance[1];
                    int park_route2 = distance[2] + distance[0];
                    int park_route3 = distance[3] + distance[4] + distance[5] + distance[6] + distance[0];
                    System.out.println("\nRoute 1: Municipal-Hall - Park | Distance: " + park_route1 + "m");
                    System.out.println(
                            "\nRoute 2: Municipal-Hall - Coconut-Farm - Park | Distance: " + park_route2 + "m");
                    System.out.println(
                            "\nRoute 3: Municipal-Hall – Public-Market - Fish-Port – Rice-Mill – Coconut-Farm - Park | Distance: "
                                    + park_route3 + "m");
                    if (park_route1 < park_route2 && park_route1 < park_route3) {
                        System.out.println("\nRecommended route: Route 1 with the distance of " + park_route1 + "m");

                        String time_format = formatTime(park_route1);
                        System.out.println("\nThe time needed to arrive at the " + distination + " is " + time_format);
                    } else if (park_route2 < park_route1 && park_route2 < park_route3) {
                        System.out.println("\nRecommended route: Route 2 with the distance of " + park_route2 + "m");

                        String time_format = formatTime(park_route2);
                        System.out.println("\nThe time needed to arrive at the " + distination + " is " + time_format);
                    } else if (park_route3 < park_route1 && park_route3 < park_route2) {
                        System.out.println("\nRecommended route: Route 3 with the distance of " + park_route3 + "m");

                        String time_format = formatTime(park_route3);
                        System.out.println("\nThe time needed to arrive at the " + distination + " is " + time_format);
                    }
                    break;
                case "Coconut-Farm":
                    int farm_route1 = distance[2];
                    int farm_route2 = distance[1] + distance[0];
                    int farm_route3 = distance[3] + distance[4] + distance[5] + distance[6];
                    System.out.println("\nRoute 1: Municipal-Hall - Coconut-Farm | Distance: " + farm_route1 + "m");
                    System.out.println(
                            "\nRoute 2: Municipal-Hall - Park – Coconut-Farm | Distance: " + farm_route2 + "m");
                    System.out.println(
                            "\nRoute 3: Municipal-Hall - Public-Market - Fish-Port -Rice-Mill - Coconut-Farm | Distance: "
                                    + farm_route3 + "m");
                    if (farm_route1 < farm_route2 && farm_route1 < farm_route3) {
                        System.out.println("\nRecommended route: Route 1 with the distance of " + farm_route1 + "m");

                        String time_format = formatTime(farm_route1);
                        System.out.println("\nThe time needed to arrive at the " + distination + " is " + time_format);
                    } else if (farm_route2 < farm_route1 && farm_route2 < farm_route3) {
                        System.out.println("\nRecommended route: Route 2 with the distance of " + farm_route2 + "m");

                        String time_format = formatTime(farm_route2);
                        System.out.println("\nThe time needed to arrive at the " + distination + " is " + time_format);
                    } else if (farm_route3 < farm_route1 && farm_route3 < farm_route2) {
                        System.out.println("\nRecommended route: Route 3 with the distance of " + farm_route3 + "m");

                        String time_format = formatTime(farm_route3);
                        System.out.println("\nThe time needed to arrive at the " + distination + " is " + time_format);
                    }
                    break;
                case "Rice-Mill":
                    int rice_route1 = distance[2] + distance[6];
                    int rice_route2 = distance[1] + distance[0] + distance[6];
                    int rice_route3 = distance[3] + distance[4] + distance[5];
                    System.out.println(
                            "\nRoute 1: Municipal-Hall - Coconut-Farm - Rice-Mill | Distance: " + rice_route1 + "m");
                    System.out.println("\nRoute 2: Municipal-Hall – Park – Coconut-Farm - Rice-Mill | Distance: "
                            + rice_route2 + "m");
                    System.out.println("\nRoute 3: Municipal-Hall - Public-Market – Fish-Port - Rice-Mill | Distance: "
                            + rice_route3 + "m");
                    if (rice_route1 < rice_route2 && rice_route1 < rice_route3) {
                        System.out.println("\nRecommended route: Route 1 with the distance of " + rice_route1 + "m");

                        String time_format = formatTime(rice_route1);
                        System.out.println("\nThe time needed to arrive at the " + distination + " is " + time_format);
                    } else if (rice_route2 < rice_route1 && rice_route2 < rice_route3) {
                        System.out.println("\nRecommended route: Route 2 with the distance of " + rice_route2 + "m");

                        String time_format = formatTime(rice_route2);
                        System.out.println("\nThe time needed to arrive at the " + distination + " is " + time_format);
                    } else if (rice_route3 < rice_route1 && rice_route3 < rice_route2) {
                        System.out.println("\nRecommended route: Route 3 with the distance of " + rice_route3 + "m");

                        String time_format = formatTime(rice_route3);
                        System.out.println("\nThe time needed to arrive at the " + distination + " is " + time_format);
                    }
                    break;
                case "Fish-Port":
                    int fish_route1 = distance[3] + distance[4];
                    int fish_route2 = distance[2] + distance[6] + distance[5];
                    int fish_route3 = distance[1] + distance[0] + distance[6] + distance[5];
                    System.out.println(
                            "\nRoute 1: Municipal-Hall - Public-Market - Fish-Port | Distance: " + fish_route1 + "m");
                    System.out.println("\nRoute 2: Municipal-Hall – Coconut-Farm-Rice-Mill - Fish-Port | Distance: "
                            + fish_route2 + "m");
                    System.out.println(
                            "\nRoute 3: Municipal-Hall - Park - Coconut-Farm - Rice-Mill - Fish-Port | Distance: "
                                    + fish_route3 + "m");
                    if (fish_route1 < fish_route2 && fish_route1 < fish_route3) {
                        System.out.println("\nRecommended route: Route 1 with the distance of " + fish_route1 + "m");

                        String time_format = formatTime(fish_route1);
                        System.out.println("\nThe time needed to arrive at the " + distination + " is " + time_format);
                    } else if (fish_route2 < fish_route1 && fish_route2 < fish_route3) {
                        System.out.println("\nRecommended route: Route 2 with the distance of " + fish_route2 + "m");

                        String time_format = formatTime(fish_route2);
                        System.out.println("\nThe time needed to arrive at the " + distination + " is " + time_format);
                    } else if (fish_route3 < fish_route1 && fish_route3 < fish_route2) {
                        System.out.println("\nRecommended route: Route 3 with the distance of " + fish_route3 + "m");

                        String time_format = formatTime(fish_route3);
                        System.out.println("\nThe time needed to arrive at the " + distination + " is " + time_format);
                    }
                    break;
                case "Public-Market":
                    int market_route1 = distance[3];
                    int market_route2 = distance[2] + distance[6] + distance[5] + distance[4];
                    int market_route3 = distance[1] + distance[0] + distance[6] + distance[5] + distance[4];
                    System.out.println("\nRoute 1: Municipal-Hall - Public-Market | Distance: " + market_route1 + "m");
                    System.out.println(
                            "\nRoute 2: Municipal-Hall - Coconut-Farm - Rice-Mill – Fish-Port - Public-Market | Distance: "
                                    + market_route2 + "m");
                    System.out.println(
                            "\nRoute 3: Municipal-Hall – Park - Coconut-Farm - Rice-Mill – Fish-Port - Public-Market | Distance: "
                                    + market_route3 + "m");
                    if (market_route1 < market_route2 && market_route1 < market_route3) {
                        System.out.println("\nRecommended route: Route 1 with the distance of " + market_route1 + "m");

                        String time_format = formatTime(market_route1);
                        System.out.println("\nThe time needed to arrive at the " + distination + " is " + time_format);
                    } else if (market_route2 < market_route1 && market_route2 < market_route3) {
                        System.out.println("\nRecommended route: Route 2 with the distance of " + market_route2 + "m");

                        String time_format = formatTime(market_route2);
                        System.out.println("\nThe time needed to arrive at the " + distination + " is " + time_format);
                    } else if (market_route3 < market_route1 && market_route3 < market_route2) {
                        System.out.println("\nRecommended route: Route 3 with the distance of " + market_route3 + "m");

                        String time_format = formatTime(market_route3);
                        System.out.println("\nThe time needed to arrive at the " + distination + " is " + time_format);
                    }
                    break;
            }
        } else if (location.equals("Public-Market")) {
            switch (distination) {
                case "Park":
                    int park_route1 = distance[3] + distance[1];
                    int park_route2 = distance[3] + distance[2] + distance[0];
                    int park_route3 = distance[4] + distance[5] + distance[6] + distance[0];
                    int park_route4 = distance[4] + distance[5] + distance[6] + distance[2] + distance[1];
                    System.out.println(
                            "\nRoute 1: Public-Market - Municipal-Hall - Park | Distance: " + park_route1 + "m");
                    System.out.println("\nRoute 2: Public-Market - Municipal-Hall - Coconut-Farm - Park | Distance: "
                            + park_route2 + "m");
                    System.out.println(
                            "\nRoute 3: Public-Market -Fish-Port – Rice-Mill – Coconut-Farm - Park | Distance: "
                                    + park_route3 + "m");
                    System.out.println(
                            "\nRoute 4: Public-Market - Fish-Port – Rice-Mill – Coconut-Farm - Municipal-Hall - Park | Distance: "
                                    + park_route4 + "m");
                    if (park_route1 < park_route2 && park_route1 < park_route3 && park_route1 < park_route4) {
                        System.out.println("\nRecommended route: Route 1 with the distance of " + park_route1 + "m");

                        String time_format = formatTime(park_route1);
                        System.out.println("\nThe time needed to arrive at the " + distination + " is " + time_format);
                    } else if (park_route2 < park_route1 && park_route2 < park_route3 && park_route2 < park_route4) {
                        System.out.println("\nRecommended route: Route 2 with the distance of " + park_route2 + "m");

                        String time_format = formatTime(park_route2);
                        System.out.println("\nThe time needed to arrive at the " + distination + " is " + time_format);
                    } else if (park_route3 < park_route1 && park_route3 < park_route2 && park_route3 < park_route4) {
                        System.out.println("\nRecommended route: Route 3 with the distance of " + park_route3 + "m");

                        String time_format = formatTime(park_route3);
                        System.out.println("\nThe time needed to arrive at the " + distination + " is " + time_format);
                    } else if (park_route4 < park_route1 && park_route4 < park_route2 && park_route4 < park_route3) {
                        System.out.println("\nRecommended route: Route 4 with the distance of " + park_route4 + "m");

                        String time_format = formatTime(park_route4);
                        System.out.println("\nThe time needed to arrive at the " + distination + " is " + time_format);
                    }
                    break;
                case "Coconut-Farm":
                    int farm_route1 = distance[3] + distance[2];
                    int farm_route2 = distance[3] + distance[1] + distance[0];
                    int farm_route3 = distance[4] + distance[5] + distance[6];
                    System.out.println("\nRoute 1: Public-Market - Municipal-Hall - Coconut-Farm | Distance: "
                            + farm_route1 + "m");
                    System.out.println("\nRoute 2: Public-Market - Municipal-Hall - Park - Coconut-Farm | Distance: "
                            + farm_route2 + "m");
                    System.out.println("\nRoute 3: Public-Market - Fish-Port – Rice-Mill – Coconut-Farm | Distance: "
                            + farm_route3 + "m");
                    if (farm_route1 < farm_route2 && farm_route1 < farm_route3) {
                        System.out.println("\nRecommended route: Route 1 with the distance of " + farm_route1 + "m");

                        String time_format = formatTime(farm_route1);
                        System.out.println("\nThe time needed to arrive at the " + distination + " is " + time_format);
                    } else if (farm_route2 < farm_route1 && farm_route2 < farm_route3) {
                        System.out.println("\nRecommended route: Route 2 with the distance of " + farm_route2 + "m");

                        String time_format = formatTime(farm_route2);
                        System.out.println("\nThe time needed to arrive at the " + distination + " is " + time_format);
                    } else if (farm_route3 < farm_route1 && farm_route3 < farm_route2) {
                        System.out.println("\nRecommended route: Route 3 with the distance of " + farm_route3 + "m");

                        String time_format = formatTime(farm_route3);
                        System.out.println("\nThe time needed to arrive at the " + distination + " is " + time_format);
                    }
                    break;
                case "Rice-Mill":
                    int rice_route1 = distance[4] + distance[5];
                    int rice_route2 = distance[3] + distance[2] + distance[6];
                    int rice_route3 = distance[3] + distance[1] + distance[0] + distance[6];
                    System.out.println(
                            "\nRoute 1: Public-Market – Fish-Port - Rice-Mill | Distance: " + rice_route1 + "m");
                    System.out
                            .println("\nRoute 2: Public-Market - Municipal-Hall - Coconut-Farm - Rice-Mill | Distance: "
                                    + rice_route2 + "m");
                    System.out.println(
                            "\nRoute 3: Public-Market - Municipal-Hall – Park – Coconut-Farm - Rice-Mill | Distance: "
                                    + rice_route3 + "m");
                    if (rice_route1 < rice_route2 && rice_route1 < rice_route3) {
                        System.out.println("\nRecommended route: Route 1 with the distance of " + rice_route1 + "m");

                        String time_format = formatTime(rice_route1);
                        System.out.println("\nThe time needed to arrive at the " + distination + " is " + time_format);
                    } else if (rice_route2 < rice_route1 && rice_route2 < rice_route3) {
                        System.out.println("\nRecommended route: Route 2 with the distance of " + rice_route2 + "m");

                        String time_format = formatTime(rice_route2);
                        System.out.println("\nThe time needed to arrive at the " + distination + " is " + time_format);
                    } else if (rice_route3 < rice_route1 && rice_route3 < rice_route2) {
                        System.out.println("\nRecommended route: Route 3 with the distance of " + rice_route3 + "m");

                        String time_format = formatTime(rice_route3);
                        System.out.println("\nThe time needed to arrive at the " + distination + " is " + time_format);
                    }
                    break;
                case "Fish-Port":
                    int fish_route1 = distance[4];
                    int fish_route2 = distance[3] + distance[2] + distance[6] + distance[5];
                    int fish_route3 = distance[3] + distance[1] + distance[0] + distance[6] + distance[5];
                    System.out.println("\nRoute 1: Public-Market - Fish-Port | Distance: " + fish_route1 + "m");
                    System.out.println(
                            "\nRoute 2: Public-Market - Municipal-Hall – Coconut-Farm-Rice-Mill - Fish-Port | Distance: "
                                    + fish_route2 + "m");
                    System.out.println(
                            "\nRoute 3: Public-Market – Municipal-Hall - Park - Coconut-Farm - Rice-Mill - Fish-Port | Distance: "
                                    + fish_route3 + "m");
                    if (fish_route1 < fish_route2 && fish_route1 < fish_route3) {
                        System.out.println("\nRecommended route: Route 1 with the distance of " + fish_route1 + "m");

                        String time_format = formatTime(fish_route1);
                        System.out.println("\nThe time needed to arrive at the " + distination + " is " + time_format);
                    } else if (fish_route2 < fish_route1 && fish_route2 < fish_route3) {
                        System.out.println("\nRecommended route: Route 2 with the distance of " + fish_route2 + "m");

                        String time_format = formatTime(fish_route2);
                        System.out.println("\nThe time needed to arrive at the " + distination + " is " + time_format);
                    } else if (fish_route3 < fish_route1 && fish_route3 < fish_route2) {
                        System.out.println("\nRecommended route: Route 3 with the distance of " + fish_route3 + "m");

                        String time_format = formatTime(fish_route3);
                        System.out.println("\nThe time needed to arrive at the " + distination + " is " + time_format);
                    }
                    break;
                case "Municipal-Hall":
                    int municipal_route1 = distance[3];
                    int municipal_route2 = distance[4] + distance[5] + distance[6] + distance[2];
                    int municipal_route3 = distance[4] + distance[5] + distance[6] + distance[0] + distance[1];
                    System.out
                            .println("\nRoute 1: Public-Market - Municipal-Hall | Distance: " + municipal_route1 + "m");
                    System.out.println(
                            "\nRoute 2: Public-Market – Fish-Port - Rice-Mill - Coconut-Farm – Municipal-Hall | Distance: "
                                    + municipal_route2 + "m");
                    System.out.println(
                            "\nRoute 3: Public-Market - Fish-Port - Rice-Mill - Coconut-Farm – Park - Municipal-Hall | Distance: "
                                    + municipal_route3 + "m");
                    if (municipal_route1 < municipal_route2 && municipal_route1 < municipal_route3) {
                        System.out
                                .println("\nRecommended route: Route 1 with the distance of " + municipal_route1 + "m");

                        String time_format = formatTime(municipal_route1);
                        System.out.println("\nThe time needed to arrive at the " + distination + " is " + time_format);
                    } else if (municipal_route2 < municipal_route1 && municipal_route2 < municipal_route3) {
                        System.out
                                .println("\nRecommended route: Route 2 with the distance of " + municipal_route2 + "m");

                        String time_format = formatTime(municipal_route2);
                        System.out.println("\nThe time needed to arrive at the " + distination + " is " + time_format);
                    } else if (municipal_route3 < municipal_route1 && municipal_route3 < municipal_route2) {
                        System.out
                                .println("\nRecommended route: Route 3 with the distance of " + municipal_route3 + "m");

                        String time_format = formatTime(municipal_route3);
                        System.out.println("\nThe time needed to arrive at the " + distination + " is " + time_format);
                    }
                    break;
            }
        } else if (location.equals("Fish-Port")) {
            switch (distination) {
                case "Park":
                    int park_route1 = distance[4] + distance[3] + distance[1];
                    int park_route2 = distance[5] + distance[6] + distance[0];
                    int park_route3 = distance[4] + distance[3] + distance[2] + distance[0];
                    int park_route4 = distance[5] + distance[6] + distance[2] + distance[1];
                    System.out.println("\nRoute 1: Fish-Port - Public-Market - Municipal-Hall – Park | Distance: "
                            + park_route1 + "m");
                    System.out.println(
                            "\nRoute 2: Fish-Port – Rice-Mill – Coconut-Farm - Park | Distance: " + park_route2 + "m");
                    System.out.println(
                            "\nRoute 3: Fish-Port - Public-Market - Municipal-Hall - Coconut-Farm - Park | Distance: "
                                    + park_route3 + "m");
                    System.out.println(
                            "\nRoute 4: Fish-Port – Rice-Mill – Coconut-Farm - Municipal-Hall - Park | Distance: "
                                    + park_route4 + "m");
                    if (park_route1 < park_route2 && park_route1 < park_route3 && park_route1 < park_route4) {
                        System.out.println("\nRecommended route: Route 1 with the distance of " + park_route1 + "m");

                        String time_format = formatTime(park_route1);
                        System.out.println("\nThe time needed to arrive at the " + distination + " is " + time_format);
                    } else if (park_route2 < park_route1 && park_route2 < park_route3 && park_route2 < park_route4) {
                        System.out.println("\nRecommended route: Route 2 with the distance of " + park_route2 + "m");

                        String time_format = formatTime(park_route2);
                        System.out.println("\nThe time needed to arrive at the " + distination + " is " + time_format);
                    } else if (park_route3 < park_route1 && park_route3 < park_route2 && park_route3 < park_route4) {
                        System.out.println("\nRecommended route: Route 3 with the distance of " + park_route3 + "m");

                        String time_format = formatTime(park_route3);
                        System.out.println("\nThe time needed to arrive at the " + distination + " is " + time_format);
                    } else if (park_route4 < park_route1 && park_route4 < park_route2 && park_route4 < park_route3) {
                        System.out.println("\nRecommended route: Route 4 with the distance of " + park_route4 + "m");

                        String time_format = formatTime(park_route4);
                        System.out.println("\nThe time needed to arrive at the " + distination + " is " + time_format);
                    }
                    break;
                case "Coconut-Farm":
                    int farm_route1 = distance[5] + distance[6];
                    int farm_route2 = distance[4] + distance[3] + distance[2];
                    int farm_route3 = distance[4] + distance[3] + distance[1] + distance[0];
                    System.out.println(
                            "\nRoute 1: Fish-Port – Rice-Mill – Coconut-Farm | Distance: " + farm_route1 + "m");
                    System.out
                            .println("\nRoute 2: Fish-Port - Public-Market - Municipal-Hall - Coconut-Farm | Distance: "
                                    + farm_route2 + "m");
                    System.out.println(
                            "\nRoute 3: Fish-Port - Public-Market - Municipal-Hall - Park - Coconut-Farm | Distance: "
                                    + farm_route3 + "m");
                    if (farm_route1 < farm_route2 && farm_route1 < farm_route3) {
                        System.out.println("\nRecommended route: Route 1 with the distance of " + farm_route1 + "m");

                        String time_format = formatTime(farm_route1);
                        System.out.println("\nThe time needed to arrive at the " + distination + " is " + time_format);
                    } else if (farm_route2 < farm_route1 && farm_route2 < farm_route3) {
                        System.out.println("\nRecommended route: Route 2 with the distance of " + farm_route2 + "m");

                        String time_format = formatTime(farm_route2);
                        System.out.println("\nThe time needed to arrive at the " + distination + " is " + time_format);
                    } else if (farm_route3 < farm_route1 && farm_route3 < farm_route2) {
                        System.out.println("\nRecommended route: Route 3 with the distance of " + farm_route3 + "m");

                        String time_format = formatTime(farm_route3);
                        System.out.println("\nThe time needed to arrive at the " + distination + " is " + time_format);
                    }
                    break;
                case "Rice-Mill":
                    int rice_route1 = distance[5];
                    int rice_route2 = distance[4] + distance[3] + distance[2] + distance[6];
                    int rice_route3 = distance[4] + distance[3] + distance[1] + distance[0] + distance[6];
                    System.out.println("\nRoute 1: Fish-Port - Rice-Mill | Distance: " + rice_route1 + "m");
                    System.out.println(
                            "\nRoute 2: Fish-Port - Public-Market - Municipal-Hall - Coconut-Farm - Rice-Mill | Distance: "
                                    + rice_route2 + "m");
                    System.out.println(
                            "\nRoute 3: Fish-Port - Public-Market - Municipal-Hall – Park – Coconut-Farm - Rice-Mill | Distance: "
                                    + rice_route3 + "m");
                    if (rice_route1 < rice_route2 && rice_route1 < rice_route3) {
                        System.out.println("\nRecommended route: Route 1 with the distance of " + rice_route1 + "m");

                        String time_format = formatTime(rice_route1);
                        System.out.println("\nThe time needed to arrive at the " + distination + " is " + time_format);
                    } else if (rice_route2 < rice_route1 && rice_route2 < rice_route3) {
                        System.out.println("\nRecommended route: Route 2 with the distance of " + rice_route2 + "m");

                        String time_format = formatTime(rice_route2);
                        System.out.println("\nThe time needed to arrive at the " + distination + " is " + time_format);
                    } else if (rice_route3 < rice_route1 && rice_route3 < rice_route2) {
                        System.out.println("\nRecommended route: Route 3 with the distance of " + rice_route3 + "m");

                        String time_format = formatTime(rice_route3);
                        System.out.println("\nThe time needed to arrive at the " + distination + " is " + time_format);
                    }
                    break;
                case "Public-Market":
                    int market_route1 = distance[4];
                    int market_route2 = distance[5] + distance[6] + distance[2] + distance[3];
                    int market_route3 = distance[5] + distance[6] + distance[0] + distance[1] + distance[3];
                    System.out.println("\nRoute 1: Fish-Port - Public-Market | Distance: " + market_route1 + "m");
                    System.out.println(
                            "\nRoute 2: Fish-Port - Rice-Mill - Coconut-Farm - Municipal-Hall - Public-Market | Distance: "
                                    + market_route2 + "m");
                    System.out.println(
                            "\nRoute 3: Fish-Port - Rice-Mill – Coconut-Farm- Park - Municipal-Hall - Public-Market | Distance: "
                                    + market_route3 + "m");
                    if (market_route1 < market_route2 && market_route1 < market_route3) {
                        System.out.println("\nRecommended route: Route 1 with the distance of " + market_route1 + "m");

                        String time_format = formatTime(market_route1);
                        System.out.println("\nThe time needed to arrive at the " + distination + " is " + time_format);
                    } else if (market_route2 < market_route1 && market_route2 < market_route3) {
                        System.out.println("\nRecommended route: Route 2 with the distance of " + market_route2 + "m");

                        String time_format = formatTime(market_route2);
                        System.out.println("\nThe time needed to arrive at the " + distination + " is " + time_format);
                    } else if (market_route3 < market_route1 && market_route3 < market_route2) {
                        System.out.println("\nRecommended route: Route 3 with the distance of " + market_route3 + "m");

                        String time_format = formatTime(market_route3);
                        System.out.println("\nThe time needed to arrive at the " + distination + " is " + time_format);
                    }
                    break;
                case "Municipal-Hall":
                    int municipal_route1 = distance[4] + distance[3];
                    int municipal_route2 = distance[5] + distance[6] + distance[2];
                    int municipal_route3 = distance[5] + distance[6] + distance[0] + distance[1];
                    System.out.println("\nRoute 1: Fish-Port - Public-Market - Municipal-Hall | Distance: "
                            + municipal_route1 + "m");
                    System.out.println("\nRoute 2: Fish-Port - Rice-Mill - Coconut-Farm –Municipal-Hall | Distance: "
                            + municipal_route2 + "m");
                    System.out.println(
                            "\nRoute 3: Fish-Port - Rice-Mill - Coconut-Farm – Park - Municipal-Hall | Distance: "
                                    + municipal_route3 + "m");
                    if (municipal_route1 < municipal_route2 && municipal_route1 < municipal_route3) {
                        System.out
                                .println("\nRecommended route: Route 1 with the distance of " + municipal_route1 + "m");

                        String time_format = formatTime(municipal_route1);
                        System.out.println("\nThe time needed to arrive at the " + distination + " is " + time_format);
                    } else if (municipal_route2 < municipal_route1 && municipal_route2 < municipal_route3) {
                        System.out
                                .println("\nRecommended route: Route 2 with the distance of " + municipal_route2 + "m");

                        String time_format = formatTime(municipal_route2);
                        System.out.println("\nThe time needed to arrive at the " + distination + " is " + time_format);
                    } else if (municipal_route3 < municipal_route1 && municipal_route3 < municipal_route2) {
                        System.out
                                .println("\nRecommended route: Route 3 with the distance of " + municipal_route3 + "m");

                        String time_format = formatTime(municipal_route3);
                        System.out.println("\nThe time needed to arrive at the " + distination + " is " + time_format);
                    }
                    break;
            }
        } else if (location.equals("Rice-Mill")) {
            switch (distination) {
                case "Fish-Port":
                    int fish_route1 = distance[5];
                    int fish_route2 = distance[6] + distance[2] + distance[3] + distance[4];
                    int fish_route3 = distance[6] + distance[0] + distance[1] + distance[3] + distance[4];
                    System.out.println("\nRoute 1: Rice-Mill - Fish-Port | Distance: " + fish_route1 + "m");
                    System.out.println(
                            "\nRoute 2: Rice-Mill - Coconut-Farm – Municipal-Hall – Public-Market - Fish-Port | Distance: "
                                    + fish_route2 + "m");
                    System.out.println(
                            "\nRoute 3: Rice-Mill - Coconut-Farm – Park - Municipal-Hall – Public-Market - Fish-Port | Distance: "
                                    + fish_route3 + "m");
                    if (fish_route1 < fish_route2 && fish_route1 < fish_route3) {
                        System.out.println("\nRecommended route: Route 1 with the distance of " + fish_route1 + "m");

                        String time_format = formatTime(fish_route1);
                        System.out.println("\nThe time needed to arrive at the " + distination + " is " + time_format);
                    } else if (fish_route2 < fish_route1 && fish_route2 < fish_route3) {
                        System.out.println("\nRecommended route: Route 2 with the distance of " + fish_route2 + "m");

                        String time_format = formatTime(fish_route2);
                        System.out.println("\nThe time needed to arrive at the " + distination + " is " + time_format);
                    } else if (fish_route3 < fish_route1 && fish_route3 < fish_route2) {
                        System.out.println("\nRecommended route: Route 3 with the distance of " + fish_route3 + "m");

                        String time_format = formatTime(fish_route3);
                        System.out.println("\nThe time needed to arrive at the " + distination + " is " + time_format);
                    }
                    break;
                case "Public-Market":
                    int market_route1 = distance[5] + distance[4];
                    int market_route2 = distance[6] + distance[2] + distance[3];
                    int market_route3 = distance[6] + distance[0] + distance[1] + distance[3];
                    System.out.println(
                            "\nRoute 1: Rice-Mill - Fish-Port – Public-Market | Distance: " + market_route1 + "m");
                    System.out
                            .println("\nRoute 2: Rice-Mill - Coconut-Farm – Municipal-Hall – Public-Market | Distance: "
                                    + market_route2 + "m");
                    System.out.println(
                            "\nRoute 3: Rice-Mill - Coconut-Farm – Park - Municipal-Hall – Public-Market | Distance: "
                                    + market_route3 + "m");
                    if (market_route1 < market_route2 && market_route1 < market_route3) {
                        System.out.println("\nRecommended route: Route 1 with the distance of " + market_route1 + "m");

                        String time_format = formatTime(market_route1);
                        System.out.println("\nThe time needed to arrive at the " + distination + " is " + time_format);
                    } else if (market_route2 < market_route1 && market_route2 < market_route3) {
                        System.out.println("\nRecommended route: Route 2 with the distance of " + market_route2 + "m");

                        String time_format = formatTime(market_route2);
                        System.out.println("\nThe time needed to arrive at the " + distination + " is " + time_format);
                    } else if (market_route3 < market_route1 && market_route3 < market_route2) {
                        System.out.println("\nRecommended route: Route 3 with the distance of " + market_route3 + "m");

                        String time_format = formatTime(market_route3);
                        System.out.println("\nThe time needed to arrive at the " + distination + " is " + time_format);
                    }
                    break;
                case "Municipal-Hall":
                    int municipal_route1 = distance[6] + distance[2];
                    int municipal_route2 = distance[5] + distance[4] + distance[3];
                    int municipal_route3 = distance[6] + distance[0] + distance[1];
                    System.out.println("\nRoute 1: Rice-Mill - Coconut-Farm – Municipal-Hall | Distance: "
                            + municipal_route1 + "m");
                    System.out.println("\nRoute 2: Rice-Mill - Fish-Port – Public-Market - Municipal-Hall | Distance: "
                            + municipal_route2 + "m");
                    System.out.println("\nRoute 3: Rice-Mill - Coconut-Farm – Park - Municipal-Hall | Distance: "
                            + municipal_route3 + "m");
                    if (municipal_route1 < municipal_route2 && municipal_route1 < municipal_route3) {
                        System.out
                                .println("\nRecommended route: Route 1 with the distance of " + municipal_route1 + "m");

                        String time_format = formatTime(municipal_route1);
                        System.out.println("\nThe time needed to arrive at the " + distination + " is " + time_format);
                    } else if (municipal_route2 < municipal_route1 && municipal_route2 < municipal_route3) {
                        System.out
                                .println("\nRecommended route: Route 2 with the distance of " + municipal_route2 + "m");

                        String time_format = formatTime(municipal_route2);
                        System.out.println("\nThe time needed to arrive at the " + distination + " is " + time_format);
                    } else if (municipal_route3 < municipal_route1 && municipal_route3 < municipal_route2) {
                        System.out
                                .println("\nRecommended route: Route 3 with the distance of " + municipal_route3 + "m");

                        String time_format = formatTime(municipal_route3);
                        System.out.println("\nThe time needed to arrive at the " + distination + " is " + time_format);
                    }
                    break;
                case "Coconut-Farm":
                    int coconut_route1 = distance[6];
                    int coconut_route2 = distance[5] + distance[4] + distance[3] + distance[2];
                    int coconut_route3 = distance[5] + distance[4] + distance[3] + distance[1] + distance[0];
                    System.out.println("\nRoute 1: Rice-Mill - Coconut-Farm | Distance: " + coconut_route1 + "m");
                    System.out.println(
                            "\nRoute 2: Rice-Mill – Fish-Port - Public-Market – Municipal-Hall - Coconut-Farm | Distance: "
                                    + coconut_route2 + "m");
                    System.out.println(
                            "\nRoute 3: Rice-Mill – Fish-Port – Public-Market – Municipal-Hall – Park - Coconut-Farm | Distance: "
                                    + coconut_route3 + "m");
                    if (coconut_route1 < coconut_route2 && coconut_route1 < coconut_route3) {
                        System.out.println("\nRecommended route: Route 1 with the distance of " + coconut_route1 + "m");

                        String time_format = formatTime(coconut_route1);
                        System.out.println("\nThe time needed to arrive at the " + distination + " is " + time_format);
                    } else if (coconut_route2 < coconut_route1 && coconut_route2 < coconut_route3) {
                        System.out.println("\nRecommended route: Route 2 with the distance of " + coconut_route2 + "m");

                        String time_format = formatTime(coconut_route2);
                        System.out.println("\nThe time needed to arrive at the " + distination + " is " + time_format);
                    } else if (coconut_route3 < coconut_route1 && coconut_route3 < coconut_route2) {
                        System.out.println("\nRecommended route: Route 3 with the distance of " + coconut_route3 + "m");

                        String time_format = formatTime(coconut_route3);
                        System.out.println("\nThe time needed to arrive at the " + distination + " is " + time_format);
                    }
                    break;
                case "Park":
                    int park_route1 = distance[6] + distance[0];
                    int park_route2 = distance[6] + distance[2] + distance[1];
                    int park_route3 = distance[5] + distance[4] + distance[3] + distance[1];
                    System.out.println("\nRoute 1: Rice-Mill – Coconut-Farm - Park | Distance: " + park_route1 + "m");
                    System.out.println("\nRoute 2: Rice-Mill – Coconut-Farm – Municipal-Hall - Park | Distance: "
                            + park_route2 + "m");
                    System.out.println(
                            "\nRoute 3: Rice-Mill – Fish-Port – Public-Market – Municipal-Hall – Park | Distance: "
                                    + park_route3 + "m");
                    if (park_route1 < park_route2 && park_route1 < park_route3) {
                        System.out.println("\nRecommended route: Route 1 with the distance of " + park_route1 + "m");

                        String time_format = formatTime(park_route1);
                        System.out.println("\nThe time needed to arrive at the " + distination + " is " + time_format);
                    } else if (park_route2 < park_route1 && park_route2 < park_route3) {
                        System.out.println("\nRecommended route: Route 2 with the distance of " + park_route2 + "m");

                        String time_format = formatTime(park_route2);
                        System.out.println("\nThe time needed to arrive at the " + distination + " is " + time_format);
                    } else if (park_route3 < park_route1 && park_route3 < park_route2) {
                        System.out.println("\nRecommended route: Route 3 with the distance of " + park_route3 + "m");

                        String time_format = formatTime(park_route3);
                        System.out.println("\nThe time needed to arrive at the " + distination + " is " + time_format);
                    }
                    break;
            }
        }
    }

}